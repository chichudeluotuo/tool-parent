DELIMITER $$
DROP PROCEDURE IF EXISTS `limit_procedure_0`$$
CREATE PROCEDURE limit_procedure_0()
BEGIN

    DECLARE _customer_id BIGINT DEFAULT 0;
    DECLARE _product_code VARCHAR(32);
    DECLARE _credit_limit BIGINT DEFAULT 0;
    DECLARE _occupy_limit BIGINT DEFAULT 0;

    -- 遍历数据结束标志
    DECLARE done INT DEFAULT FALSE;
    -- 游标
    DECLARE product_cursor_data CURSOR FOR SELECT customer_id,credit_limit,occupy_limit FROM produce_limit_temp_1;
    -- 将结束标志绑定到游标
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
    
    -- 打开游标
    OPEN  product_cursor_data;     
    -- 遍历
    read_loop: LOOP
            -- 取值 取多个字段
            FETCH  NEXT FROM product_cursor_data INTO _customer_id,_credit_limit,_occupy_limit;
            IF done THEN
                LEAVE read_loop;
             END IF;
 
        UPDATE t_cycling_account_limit_0_1 SET credit_limit=_credit_limit,available_limit=(_credit_limit-_occupy_limit) WHERE customer_id=_customer_id;
        INSERT INTO t_product_type_limit_0_1 SELECT  `id`,`customer_id`,`cycling_account_credit_id`,`credit_limit`,`available_limit`,`cycling_flag`,`account_credit_id`,`account_type`,"2" AS `product_type` ,`status`,`modified`,`created`,`version` FROM t_cycling_account_limit_0_1;


	COMMIT;


    END LOOP;
     CLOSE product_cursor_data;
END $$
